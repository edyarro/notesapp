"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudAssemblyError = void 0;
const ASSEMBLY_ERROR_SYMBOL = Symbol.for('@aws-cdk/cx-api.CloudAssemblyError');
/**
 * A CloudAssemblyError is thrown for issues with the synthesized CloudAssembly.
 *
 * These are typically exceptions that are unexpected for end-users,
 * and should only occur during abnormal operation, e.g. when the synthesis
 * didn't fully complete.
 *
 * @internal
 */
class CloudAssemblyError extends Error {
    #time;
    /**
     * The time the error was thrown.
     */
    get time() {
        return this.#time;
    }
    get type() {
        return 'assembly';
    }
    constructor(msg) {
        super(msg);
        Object.setPrototypeOf(this, CloudAssemblyError.prototype);
        Object.defineProperty(this, ASSEMBLY_ERROR_SYMBOL, { value: true });
        this.name = new.target.name;
        this.#time = new Date().toISOString();
    }
}
exports.CloudAssemblyError = CloudAssemblyError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsb0NBQW9DLENBQUMsQ0FBQztBQUUvRTs7Ozs7Ozs7R0FRRztBQUNILE1BQWEsa0JBQW1CLFNBQVEsS0FBSztJQUMzQyxLQUFLLENBQVM7SUFFZDs7T0FFRztJQUNILElBQVcsSUFBSTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztLQUNuQjtJQUVELElBQVcsSUFBSTtRQUNiLE9BQU8sVUFBVSxDQUFDO0tBQ25CO0lBRUQsWUFBWSxHQUFXO1FBQ3JCLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVYLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFELE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFFcEUsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDdkM7Q0FDRjtBQXZCRCxnREF1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBU1NFTUJMWV9FUlJPUl9TWU1CT0wgPSBTeW1ib2wuZm9yKCdAYXdzLWNkay9jeC1hcGkuQ2xvdWRBc3NlbWJseUVycm9yJyk7XG5cbi8qKlxuICogQSBDbG91ZEFzc2VtYmx5RXJyb3IgaXMgdGhyb3duIGZvciBpc3N1ZXMgd2l0aCB0aGUgc3ludGhlc2l6ZWQgQ2xvdWRBc3NlbWJseS5cbiAqXG4gKiBUaGVzZSBhcmUgdHlwaWNhbGx5IGV4Y2VwdGlvbnMgdGhhdCBhcmUgdW5leHBlY3RlZCBmb3IgZW5kLXVzZXJzLFxuICogYW5kIHNob3VsZCBvbmx5IG9jY3VyIGR1cmluZyBhYm5vcm1hbCBvcGVyYXRpb24sIGUuZy4gd2hlbiB0aGUgc3ludGhlc2lzXG4gKiBkaWRuJ3QgZnVsbHkgY29tcGxldGUuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBDbG91ZEFzc2VtYmx5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICN0aW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB0aW1lIHRoZSBlcnJvciB3YXMgdGhyb3duLlxuICAgKi9cbiAgcHVibGljIGdldCB0aW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuI3RpbWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHR5cGUoKTogJ2Fzc2VtYmx5JyB7XG4gICAgcmV0dXJuICdhc3NlbWJseSc7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihtc2c6IHN0cmluZykge1xuICAgIHN1cGVyKG1zZyk7XG5cbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQ2xvdWRBc3NlbWJseUVycm9yLnByb3RvdHlwZSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIEFTU0VNQkxZX0VSUk9SX1NZTUJPTCwgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuICAgIHRoaXMubmFtZSA9IG5ldy50YXJnZXQubmFtZTtcbiAgICB0aGlzLiN0aW1lID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICB9XG59XG4iXX0=